# nginx 1.24.x

load_module modules/ngx_http_brotli_filter_module.so;
load_module modules/ngx_http_brotli_static_module.so;
load_module modules/ngx_http_geoip2_module.so;

error_log syslog:server=unix:/dev/log,nohostname;
# leave stderr open but minimize duplicate logging to it
error_log stderr emerg;

worker_processes auto;
worker_rlimit_nofile 16384;

events {
    worker_connections 4096;
}

http {
    root /var/empty;

    include mime.types;
    default_type application/octet-stream;

    charset utf-8;
    charset_types text/css text/plain text/xml application/atom+xml application/javascript;

    sendfile on;
    sendfile_max_chunk 256k;
    tcp_nopush on;
    keepalive_requests 256;
    keepalive_timeout 3m;
    server_tokens off;
    msie_padding off;

    client_max_body_size 1k;
    client_body_buffer_size 1k;
    client_header_buffer_size 1k;
    large_client_header_buffers 2 1k;
    http2_chunk_size 4k;

    client_body_timeout 15s;
    client_header_timeout 15s;
    send_timeout 30s;

    max_ranges 1;

    resolver [::1];
    resolver_timeout 15s;

    proxy_connect_timeout 5s;
    proxy_read_timeout 15s;
    proxy_send_timeout 15s;

    proxy_cache_path /var/cache/nginx/media-proxy levels=1:2 use_temp_path=off keys_zone=media-proxy-cache:10m inactive=7d max_size=5G;

    # remove security headers that are statically set to the strictest possible values
    fastcgi_hide_header Referrer-Policy;
    fastcgi_hide_header X-Content-Type-Options;

    include fastcgi_params;
    fastcgi_param DOCUMENT_ROOT $realpath_root;
    fastcgi_param SCRIPT_FILENAME $realpath_root/index.php;
    fastcgi_param SCRIPT_NAME /index.php;

    fastcgi_buffers 8 16k;

    fastcgi_connect_timeout 5s;
    fastcgi_read_timeout 15s;
    fastcgi_send_timeout 15s;

    map $request_method $post_binary_remote_addr {
        POST $binary_remote_addr;
    }

    http2_max_concurrent_streams 16;
    limit_conn_status 429;
    limit_conn_zone $binary_remote_addr zone=http-limit:10m;
    limit_conn http-limit 128;
    limit_req_status 429;
    limit_req_zone $binary_remote_addr zone=flarum-limit:10m rate=256r/s;
    limit_req_zone $post_binary_remote_addr zone=auth-limit:10m rate=1r/s;
    limit_req_zone $binary_remote_addr zone=media-proxy-limit:10m rate=256r/s;

    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_ciphers ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-ECDSA-AES128-GCM-SHA256;
    ssl_prefer_server_ciphers on;
    ssl_conf_command Options PrioritizeChaCha;

    ssl_certificate /etc/letsencrypt/live/discuss.grapheneos.org/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/discuss.grapheneos.org/privkey.pem;

    # maintained by nginx-rotate-session-ticket-keys in ramfs
    ssl_session_ticket_key session-ticket-keys/4.key;
    ssl_session_ticket_key session-ticket-keys/3.key;
    ssl_session_ticket_key session-ticket-keys/2.key;
    ssl_session_ticket_key session-ticket-keys/1.key;
    ssl_session_timeout 1d;
    ssl_buffer_size 4k;

    ssl_trusted_certificate /etc/letsencrypt/live/discuss.grapheneos.org/chain.pem;
    ssl_stapling on;
    ssl_stapling_verify on;
    # maintained by certbot-ocsp-fetcher
    ssl_stapling_file /var/cache/certbot-ocsp-fetcher/discuss.grapheneos.org.der;

    log_format main '$connection-$connection_requests $remote_addr $remote_user $ssl_protocol $server_protocol '
        '$host $request_method "$request_uri" $status $request_length $body_bytes_sent/$bytes_sent '
        '$request_time $upstream_connect_time/$upstream_header_time/$upstream_response_time '
        '$upstream_cache_status "$http_referer" "$http_user_agent"';
    access_log syslog:server=unix:/dev/log,nohostname main;
    log_subrequest on;
    log_not_found off;

    gzip_proxied any;
    gzip_vary on;

    if_modified_since before;

    aio threads;
    aio_write on;

    map $upstream_http_content_type $filtered_content_type {
        image/avif image/avif;
        image/jpeg image/jpeg;
        image/gif image/gif;
        image/png image/png;
        image/svg+xml image/svg+xml;
        image/webp image/webp;
        default application/octet-stream;
    }

    map $http_origin $origin_match {
        https://discuss.grapheneos.org 1;
        default 0;
    }

    # Origin header is not set for GET or HEAD requests
    map $request_method $origin_match_lax {
        GET 1;
        HEAD 1;
        default $origin_match;
    }

    # Enforce Origin for methods setting it and Sec-Fetch-Site when available
    #
    # Safari only supports Sec-Fetch-Site since 16.4 on 2023-03-27
    map $http_sec_fetch_site $same_origin_lax {
        same-origin $origin_match_lax;
        "" $origin_match_lax;
        default 0;
    }

    map $request_method $same_origin_lax_or_get {
        GET 1;
        default $same_origin_lax;
    }

    geo $registration_blocked {
        default 0;
        include stopforumspam-toxic_ip_cidr.conf;
        include stopforumspam-listed_ip_merged.conf;
        include blocked.conf;
    }

    geoip2 /var/lib/GeoIP/GeoLite2-ASN.mmdb {
        auto_reload 30m;
        $geoip2_data_autonomous_system_number autonomous_system_number;
    }

    upstream backend {
        zone backend 32k;
        server unix:/run/php-fpm/php-fpm.sock max_conns=1024 max_fails=0;
    }

    server {
        listen 80 default_server backlog=4096;
        listen [::]:80 default_server backlog=4096;

        keepalive_timeout 0;

        # https://trac.nginx.org/nginx/ticket/2012
        location / {
            return 404;
        }
    }

    server {
        listen 80;
        listen [::]:80;
        server_name discuss.grapheneos.org;

        keepalive_timeout 0;

        location /.well-known/acme-challenge/ {
            root /srv/certbot;
        }

        location / {
            return 301 https://$host$request_uri;
        }
    }

    server {
        listen 443 default_server ssl http2 backlog=4096;
        listen [::]:443 default_server ssl http2 backlog=4096;
        ssl_reject_handshake on;

        keepalive_timeout 0;

        # https://trac.nginx.org/nginx/ticket/2012
        location / {
            return 404;
        }
    }

    server {
        listen 443 ssl http2;
        listen [::]:443 ssl http2;
        server_name discuss.grapheneos.org;

        client_max_body_size 1m;
        client_body_buffer_size 16k;

        root /opt/flarum/public;

        error_page 404 /404.html;

        include snippets/security-headers.conf;
        add_header Cross-Origin-Resource-Policy "same-origin" always;

        gzip on;
        gzip_comp_level 6;
        gzip_min_length 256;
        gzip_types
            application/javascript
            application/json
            application/vnd.api+json
            application/vnd.ms-fontobject
            application/x-font-ttf
            application/xml
            font/opentype
            image/svg+xml
            text/css
            text/javascript
            text/plain;
        brotli on;
        brotli_min_length 256;
        brotli_types
            application/javascript
            application/json
            application/vnd.api+json
            application/vnd.ms-fontobject
            application/x-font-ttf
            application/xml
            font/opentype
            image/svg+xml
            text/css
            text/javascript
            text/plain;

        location = /404.html {
            internal;
            include snippets/security-headers.conf;
            add_header Cross-Origin-Resource-Policy "same-origin" always;
        }

        location = /favicon.ico {
            if ($http_accept ~ "image/svg\+xml") {
                rewrite ^ /favicon.svg last;
            }
            include snippets/security-headers.conf;
            # avoid breaking image hotlinking such as https://github.com/TryGhost/Ghost/issues/12880
            add_header Cross-Origin-Resource-Policy "cross-origin" always;
            add_header Cache-Control "public, max-age=604800";
            gzip_static on;
            brotli_static on;
        }

        location = /favicon.svg {
            include snippets/security-headers.conf;
            # avoid breaking image hotlinking such as https://github.com/TryGhost/Ghost/issues/12880
            add_header Cross-Origin-Resource-Policy "cross-origin" always;
            add_header Cache-Control "public, max-age=604800";
            gzip_static on;
            brotli_static on;
        }

        location = /780febcc.mask-icon.svg {
            include snippets/security-headers.conf;
            add_header Cross-Origin-Resource-Policy "same-origin" always;
            add_header Cache-Control "public, max-age=31536000, immutable";
            gzip_static on;
            brotli_static on;
        }

        location = / {
            if ($request_method != GET) {
                return 405;
            }
            limit_req zone=flarum-limit burst=32 nodelay;
            fastcgi_pass backend;
        }

        location = /admin {
            if ($request_method != GET) {
                return 405;
            }
            limit_req zone=flarum-limit burst=32 nodelay;
            fastcgi_pass backend;
        }

        location = /api {
            if ($request_method != GET) {
                return 405;
            }
            if ($same_origin_lax != 1) {
                return 403;
            }
            limit_req zone=flarum-limit burst=32 nodelay;
            fastcgi_pass backend;
        }

        location = /all {
            if ($request_method != GET) {
                return 405;
            }
            limit_req zone=flarum-limit burst=32 nodelay;
            fastcgi_pass backend;
        }

        location = /api/forgot {
            if ($request_method != POST) {
                return 405;
            }
            if ($same_origin_lax != 1) {
                return 403;
            }
            limit_req zone=flarum-limit burst=32 nodelay;
            limit_req zone=auth-limit burst=10 nodelay;
            fastcgi_pass backend;
        }

        location = /global-logout {
            if ($request_method != POST) {
                return 405;
            }
            if ($same_origin_lax != 1) {
                return 403;
            }
            limit_req zone=flarum-limit burst=32 nodelay;
            fastcgi_pass backend;
        }

        location = /login {
            if ($request_method != POST) {
                return 405;
            }
            if ($same_origin_lax != 1) {
                return 403;
            }
            limit_req zone=flarum-limit burst=32 nodelay;
            limit_req zone=auth-limit burst=10 nodelay;
            fastcgi_pass backend;
        }

        location = /logout {
            if ($request_method != GET) {
                return 405;
            }
            limit_req zone=flarum-limit burst=32 nodelay;
            fastcgi_pass backend;
        }

        location = /notifications {
            if ($request_method != GET) {
                return 405;
            }
            limit_req zone=flarum-limit burst=32 nodelay;
            fastcgi_pass backend;
        }

        location = /register {
            if ($request_method != POST) {
                return 405;
            }
            if ($same_origin_lax != 1) {
                return 403;
            }
            if ($registration_blocked = 1) {
                return 403;
            }
            limit_req zone=flarum-limit burst=32 nodelay;
            limit_req zone=auth-limit burst=10 nodelay;
            fastcgi_pass backend;
        }

        location = /reset {
            if ($request_method != POST) {
                return 405;
            }
            if ($same_origin_lax != 1) {
                return 403;
            }
            limit_req zone=flarum-limit burst=32 nodelay;
            fastcgi_pass backend;
        }

        location = /settings {
            if ($request_method != GET) {
                return 405;
            }
            limit_req zone=flarum-limit burst=32 nodelay;
            fastcgi_pass backend;
        }

        location = /tags {
            if ($request_method != GET) {
                return 405;
            }
            limit_req zone=flarum-limit burst=32 nodelay;
            fastcgi_pass backend;
        }

        location ~ ^/media-proxy/(?<phost>i.imgur.com)(?<puri>/[^\s]*) {
            if ($request_method != GET) {
                return 405;
            }
            if ($same_origin_lax != 1) {
                return 403;
            }

            # disallow web browser requests not referred from discuss.grapheneos.org
            #
            # can be removed once Sec-Fetch-Site is fully enforced
            valid_referers server_names;
            if ($invalid_referer) {
                return 403;
            }

            include snippets/security-headers.conf;
            add_header Content-Security-Policy "default-src 'none'; form-action 'none'; frame-ancestors 'none'; base-uri 'none'" always;

            set $base https://$phost;
            rewrite .* $puri break;

            proxy_pass $base;

            proxy_set_header Host $phost;

            proxy_cache media-proxy-cache;
            proxy_cache_lock on;
            proxy_cache_lock_timeout 60s;
            proxy_cache_revalidate on;
            proxy_cache_use_stale error timeout updating invalid_header http_500 http_502 http_503 http_504 http_429;
            proxy_cache_background_update on;
            proxy_no_cache $arg_nocache;
            proxy_cache_bypass $arg_nocache;
            add_header X-Cache-Status $upstream_cache_status;

            proxy_pass_request_body off;
            proxy_pass_request_headers off;

            proxy_ignore_headers Set-Cookie X-Accel-Redirect X-Accel-Expires X-Accel-Limit-Rate X-Accel-Buffering X-Accel-Charset;

            proxy_hide_header Access-Control-Allow-Methods;
            proxy_hide_header Access-Control-Allow-Origin;
            proxy_hide_header Age;
            proxy_hide_header Content-Security-Policy;
            proxy_hide_header Cross-Origin-Embedder-Policy;
            proxy_hide_header Cross-Origin-Opener-Policy;
            proxy_hide_header Permissions-Policy;
            proxy_hide_header Referrer-Policy;
            proxy_hide_header Set-Cookie;
            proxy_hide_header Strict-Transport-Security;
            proxy_hide_header X-Amz-Storage-Class;
            proxy_hide_header X-Cache;
            proxy_hide_header X-Cache-Hits;
            proxy_hide_header X-Content-Type-Options;
            proxy_hide_header X-Frame-Options;
            proxy_hide_header X-Served-By;
            proxy_hide_header X-Timer;
            proxy_hide_header X-XSS-Protection;

            proxy_hide_header Content-Type;
            add_header Content-Type $filtered_content_type;

            proxy_http_version 1.1;

            proxy_ssl_protocols TLSv1.2 TLSv1.3;
            proxy_ssl_server_name on;
            proxy_ssl_trusted_certificate /etc/ssl/certs/ca-certificates.crt;
            proxy_ssl_verify on;

            proxy_max_temp_file_size 8m;

            proxy_redirect ~(https?)://(.*) https://discuss.grapheneos.org/media-proxy/$2;
            proxy_redirect ~(.*) https://discuss.grapheneos.org/media-proxy/$phost$1;

            proxy_intercept_errors on;

            limit_req zone=media-proxy-limit burst=32 nodelay;
        }

        location ~ \.webmanifest$ {
            include snippets/security-headers.conf;
            add_header Cross-Origin-Resource-Policy "same-origin" always;
            add_header Cache-Control "public, max-age=604800";
            gzip_static on;
            brotli_static on;
        }

        location ~ \.png$ {
            include snippets/security-headers.conf;
            add_header Cross-Origin-Resource-Policy "same-origin" always;
            add_header Cache-Control "public, max-age=2592000";
        }

        location ~ \.(?:css|js|js.map)$ {
            include snippets/security-headers.conf;
            add_header Cross-Origin-Resource-Policy "same-origin" always;
            add_header Cache-Control "public, max-age=31536000";
            gzip_static on;
            brotli_static on;
        }

        location ~ \.(?:ttf|otf|eot|woff|woff2)$ {
            include snippets/security-headers.conf;
            add_header Cross-Origin-Resource-Policy "same-origin" always;
            add_header Cache-Control "public, max-age=2592000";
        }

        location ~ \.(?:json|txt|xml)$ {
            include snippets/security-headers.conf;
            add_header Cross-Origin-Resource-Policy "same-origin" always;
            add_header Cache-Control "public, max-age=1800";
            gzip_static on;
            brotli_static on;
        }

        location ~ ^/api/users/\d+/send-confirmation$ {
            if ($request_method != POST) {
                return 405;
            }
            if ($same_origin_lax != 1) {
                return 403;
            }
            limit_req zone=flarum-limit burst=32 nodelay;
            limit_req zone=auth-limit burst=10 nodelay;
            fastcgi_pass backend;
        }

        location /admin/extensions/ {
            if ($request_method != POST) {
                return 405;
            }
            if ($same_origin_lax != 1) {
                return 403;
            }
            limit_req zone=flarum-limit burst=32 nodelay;
            fastcgi_pass backend;
        }

        location /api/ {
            if ($same_origin_lax != 1) {
                return 403;
            }
            limit_req zone=flarum-limit burst=32 nodelay;
            fastcgi_pass backend;
        }

        location /confirm/ {
            if ($request_method !~ ^(?:GET|POST)$) {
                return 405;
            }
            if ($same_origin_lax_or_get != 1) {
                return 403;
            }
            limit_req zone=flarum-limit burst=32 nodelay;
            fastcgi_pass backend;
        }

        location /d/ {
            if ($request_method != GET) {
                return 405;
            }
            limit_req zone=flarum-limit burst=32 nodelay;
            fastcgi_pass backend;
        }

        location /reset/ {
            if ($request_method != GET) {
                return 405;
            }
            limit_req zone=flarum-limit burst=32 nodelay;
            fastcgi_pass backend;
        }

        location /t/ {
            if ($request_method != GET) {
                return 405;
            }
            limit_req zone=flarum-limit burst=32 nodelay;
            fastcgi_pass backend;
        }

        location /u/ {
            if ($request_method != GET) {
                return 405;
            }
            limit_req zone=flarum-limit burst=32 nodelay;
            fastcgi_pass backend;
        }

        location / {
            return 404;
        }
    }

    server {
        listen unix:/run/nginx/status.sock;

        root /opt/flarum/public;

        access_log off;

        location = / {
            stub_status;
        }

        location = /phpinfo {
            if ($request_method != GET) {
                return 405;
            }
            include fastcgi_params;
            fastcgi_param DOCUMENT_ROOT $realpath_root;
            fastcgi_param SCRIPT_FILENAME $realpath_root/phpinfo.php;
            fastcgi_param SCRIPT_NAME /phpinfo.php;
            limit_req zone=flarum-limit burst=32 nodelay;
            fastcgi_pass backend;
        }

        location = /php-fpm {
            if ($request_method != GET) {
                return 405;
            }
            include fastcgi_params;
            fastcgi_param DOCUMENT_ROOT $realpath_root;
            fastcgi_param SCRIPT_FILENAME $realpath_root/status;
            fastcgi_param SCRIPT_NAME /status;
            limit_req zone=flarum-limit burst=32 nodelay;
            fastcgi_pass backend;
        }

        location / {
            return 404;
        }
    }
}
